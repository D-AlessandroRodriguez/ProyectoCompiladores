start: instruccion+
instruccion: ciclo
            | declararVariable 
            | decision 
            | asignacion 
            | impresion

impresion: PRINT expresion ";"

ciclo: forLoop | whileLoop | doWhile 
forLoop: "for" "(" asignacion ";" condicion ";" asignacion ")" bloque ";"
whileLoop: "while" "(" condicion ")" bloque ";" 
doWhile: "do" bloque "while" "(" condicion ")" ";" 

decision: ifStatement
ifStatement: "if" "(" condicion ")" bloque elifParte? elseParte? ";" 
elifParte: ("elif" "(" condicion ")" bloque)* 
elseParte: "else" bloque 

condicion: termino ( (OPERADORLOG | OPERADORCOMP) termino )* | BOOL
asignacion: nombreVariable "=" termino ";" 
bloque: "{" instruccion+ "}" 
declararVariable: tipoVariable nombreVariable ";"

nombreVariable: VARNAME                              
valor: typeData                                       
termino: nombreVariable | valor | "(" expresion ")"
expresion: termino ( OPERADOR termino )*

typeData: STRING | FLOAT | INT | BOOL
STRING: /"[^"\n]*"/
FLOAT: /[0-9]+\.[0-9]+/
INT: /[0-9]+/
BOOL: "TRUE" | "FALSE"
VARNAME: /[a-zA-Z_][a-zA-Z0-9_]*/
OPERADOR: "+" | "-" | "*" | "/"
OPERADORCOMP: ">=" | "<=" | "==" | "!=" | "<" | ">"
OPERADORLOG: "&&" | "||" | "AND" | "OR"

PRINT: "out"
Comentario: \/\*[\s\S]*?\*\/ 
     
%ignore Comentario
%import common.WS
%ignore WS